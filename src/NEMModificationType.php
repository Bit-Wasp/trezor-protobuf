<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : types.proto
 */


namespace BitWasp\TrezorProto;

/**
 * Protobuf enum : BitWasp.TrezorProto.NEMModificationType
 */
class NEMModificationType extends \Protobuf\Enum
{

    /**
     * CosignatoryModification_Add = 1
     */
    const CosignatoryModification_Add_VALUE = 1;

    /**
     * CosignatoryModification_Delete = 2
     */
    const CosignatoryModification_Delete_VALUE = 2;

    /**
     * @var \BitWasp\TrezorProto\NEMModificationType
     */
    protected static $CosignatoryModification_Add = null;

    /**
     * @var \BitWasp\TrezorProto\NEMModificationType
     */
    protected static $CosignatoryModification_Delete = null;

    /**
     * @return \BitWasp\TrezorProto\NEMModificationType
     */
    public static function CosignatoryModification_Add()
    {
        if (self::$CosignatoryModification_Add !== null) {
            return self::$CosignatoryModification_Add;
        }

        return self::$CosignatoryModification_Add = new self('CosignatoryModification_Add', self::CosignatoryModification_Add_VALUE);
    }

    /**
     * @return \BitWasp\TrezorProto\NEMModificationType
     */
    public static function CosignatoryModification_Delete()
    {
        if (self::$CosignatoryModification_Delete !== null) {
            return self::$CosignatoryModification_Delete;
        }

        return self::$CosignatoryModification_Delete = new self('CosignatoryModification_Delete', self::CosignatoryModification_Delete_VALUE);
    }

    /**
     * @param int $value
     * @return \BitWasp\TrezorProto\NEMModificationType
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 1: return self::CosignatoryModification_Add();
            case 2: return self::CosignatoryModification_Delete();
            default: return null;
        }
    }


}

